{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/logo.svg"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","src","LogoUrl","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","push","Footer","footer","Components","Loading","Home","lazy","History","About","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","log","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","newFilename","newFile","isUpoading","err","values","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext","module","exports"],"mappings":"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","file":"static/js/main.334cec50.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LogoUrl from './logo.svg';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport { useStores } from '../stores';\nimport { observer } from 'mobx-react';\n\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 100px;\n  background-color: #1D6A96;\n  color: #fff;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: #fff;\n  margin-left: 30px;\n\n  &.active {\n    border-bottom: 1px solid #fff;\n  }\n`;\n\nconst Login = styled.div`\n  margin-left: auto;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px;\n`;\n\n\nconst  Component = observer(() => {\n\n  const history = useHistory();\n  const { UserStore, AuthStore } = useStores();\n\n  const handleLogout = () => {\n    AuthStore.logout();\n  };\n\n  const handleLogin = () => {\n    history.push('/login');\n  };\n\n  const handleRegister = () => {\n    history.push('/register');\n  }\n\n  useEffect(()=>{\n    UserStore.pullUser();\n  },[])\n\n  return (\n      <Header>\n        <Logo src={LogoUrl} />\n        <nav>\n          <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\n          <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\n          <StyledLink to=\"/about\" activeClassName=\"active\">关于生成姬</StyledLink>\n        </nav>\n        <Login>\n          {\n            UserStore.currentUser ? <>已验证ID：\n              {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\" onClick={handleLogout}>注销验证</StyledButton>\n            </> :<>\n              <StyledButton type=\"primary\" onClick={handleLogin}>验证通行证</StyledButton>\n              <StyledButton type=\"primary\" onClick={handleRegister}>申请通行证</StyledButton>\n            </>\n\n          }\n        </Login>\n\n      </Header>\n  );\n});\n\nexport default Component;","import React from \"react\";\r\nimport styled from 'styled-components'\r\nconst Footer = styled.footer`\r\n    padding:10px 100px;\r\n    text-align:center;\r\n    font-size:12px;\r\n    color:#aaa;\r\n`\r\n\r\nfunction Components() {\r\n  return (\r\n    <Footer>\r\n      <p>\r\n        © 荏狸十三\r\n      </p>\r\n    </Footer>\r\n  );\r\n}\r\nexport default Components;\r\n","import React from \"react\";\r\n\r\nexport default function  Loading() {\r\n    return (\r\n        <div>正在加载...</div>\r\n    )\r\n}\r\n","import React, {Suspense, lazy} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\nimport {\n    Switch,\n    Route\n} from 'react-router-dom'\n\n\n// import Home from \"./pages/Home\";\n// import History from \"./pages/History\";\n// import About from \"./pages/About\";\nconst Home = lazy(() => import('./pages/Home'));\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\n\nfunction App() {\n    return (<>\n            <Header/>\n            <main>\n                <Suspense fallback={<Loading/>}>\n                    <Switch>\n                        <Route path=\"/\" exact component={Home}/>\n                        <Route path=\"/history\" component={History}/>\n                        <Route path=\"/about\" component={About}/>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/Register\" component={Register}/>\n                    </Switch>\n                </Suspense>\n            </main>\n            <Footer/>\n        </>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\n\n\n\nReactDOM.render(\n\n    <Router>\n      <App />\n    </Router>,\n\n  document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister();\n","import AV, {Query, User} from \"leancloud-storage\";\n\nAV.init({\n  appId: \"PaHnXV0gRaXnbaCWzrAVI4w9-gzGzoHsz\",\n  appKey: \"Kn7L5MEFlYSO19cyUHEmLxSY\",\n  serverURL: \"https://pahnxv0g.lc-cn-n1-shared.com\"\n});\n\nconst Auth = {\n  register(username, password) {\n    let user = new User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    });\n  },\n\n  login(username, password) {\n    console.log(username, password)\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\n    });\n  },\n  logout() {\n    User.logOut()\n  },\n  getCurrentUser() {\n    return User.current()\n  }\n}\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image');\n    const avFile = new AV.File(filename, file);\n    item.set('filename', filename);\n    item.set('owner', AV.User.current());\n    item.set('url', avFile);\n    return new Promise((resolve, reject) => {\n      item.save().then(serverFile => resolve(serverFile), error => reject(error));\n    });\n  },\n\n  find({page=0, limit=10}) {\n    const query = new AV.Query('Image');\n    query.include('owner');\n    query.limit(limit);\n    query.skip(page*limit);\n    query.descending('createdAt');\n    query.equalTo('owner', AV.User.current());\n    return new Promise((resolve, reject) => {\n      query.find()\n          .then(results => resolve(results))\n          .catch(error => reject(error))\n    });\n  }\n}\nwindow.Uploader=Uploader;\n\nexport {\n  Auth,\n  Uploader\n}","import { observable, action } from 'mobx';\r\nimport { Auth } from '../models';\r\n\r\nclass UserStore {\r\n  @observable currentUser = null;\r\n\r\n  @action pullUser() {\r\n    this.currentUser = Auth.getCurrentUser()\r\n  }\r\n\r\n  @action resetUser() {\r\n    this.currentUser = null;\r\n  }\r\n}\r\n\r\n\r\nexport default new UserStore() ;","import { observable, action } from 'mobx';\r\nimport { Uploader } from '../models';\r\nimport { message } from 'antd';\r\n\r\nclass HistoryStore {\r\n  @observable list = [];\r\n  @observable isLoading = false;\r\n  @observable hasMore = true;\r\n  @observable page = 0;\r\n  limit = 10;\r\n\r\n  @action append(newList) {\r\n    this.list = this.list.concat(newList);\r\n  }\r\n\r\n  @action find() {\r\n    this.isLoading = true;\r\n    Uploader.find({page: this.page, limit: this.limit})\r\n        .then(newList => {\r\n          this.append(newList);\r\n          this.page++;\r\n          if(newList.length < this.limit) {\r\n            this.hasMore = false;\r\n          }\r\n        }).catch(error => {\r\n      message.error('加载数据失败');\r\n    }).finally(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  @action reset() {\r\n    this.list = [];\r\n    this.isLoading = false;\r\n    this.hasMore = true;\r\n    this.page = 0;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new HistoryStore();","import { observable, action } from 'mobx';\r\nimport { Uploader } from '../models';\r\nimport { message } from 'antd';\r\n\r\nclass ImageStore {\r\n  @observable filename = \"\";\r\n  @observable file = null;\r\n  @observable isUpoading = false;\r\n  @observable serverFile = null;\r\n\r\n  @action setFilename(newFilename) {\r\n    this.filename = newFilename;\r\n  }\r\n\r\n  @action setFile(newFile) {\r\n    this.file = newFile;\r\n  }\r\n\r\n  @action upload() {\r\n    this.isUpoading = true;\r\n    this.serverFile = null;\r\n    return new Promise((resolve, reject) => {\r\n      Uploader.add(this.file, this.filename)\r\n          .then(serverFile => {\r\n            this.serverFile = serverFile;\r\n            resolve(serverFile);\r\n          }).catch(err => {\r\n        message.error('上传失败');\r\n        reject(err);\r\n      }).finally(() => {\r\n        this.isUpoading = false;\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  @action reset() {\r\n    this.isUpoading = false;\r\n    this.serverFile = null;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default new ImageStore();\r\n","import { observable, action } from 'mobx';\nimport { Auth } from '../models';\nimport UserStore from './user';\nimport HistoryStore from './history';\nimport ImageStore from './image';\nimport { message } from 'antd';\n\nclass AuthStore {\n  @observable values = {\n    username: '',\n    password: ''\n  };\n\n  @action setUsername(username) {\n    this.values.username = username;\n  }\n\n  @action setPassword(password) {\n    this.values.password = password;\n  }\n\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n          .then(user => {\n            UserStore.pullUser();\n            resolve(user);\n          }).catch(err => {\n        UserStore.resetUser();\n        message.error('身份验证失败');\n        reject(err);\n      })\n    });\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n          .then(user => {\n            UserStore.pullUser();\n            resolve(user);\n          }).catch(err => {\n        UserStore.resetUser();\n        message.error('通行证创建失败');\n        reject(err);\n      })\n    });\n  }\n\n  @action logout() {\n    Auth.logout();\n    UserStore.resetUser();\n    HistoryStore.reset();\n    ImageStore.reset();\n  }\n\n}\n\n\nexport default new AuthStore();","import React, { createContext, useContext } from 'react';\nimport AuthStore from './auth';\nimport UserStore from './user';\nimport ImageStore from './image';\nimport HistoryStore from './history';\n\nconst context = createContext({\n    AuthStore,\n    UserStore,\n    ImageStore,\n    HistoryStore\n});\n\nwindow.stores = {\n    AuthStore,\n    UserStore,\n    ImageStore,\n    HistoryStore\n};\n\nexport const useStores = () => useContext(context);","module.exports = __webpack_public_path__ + \"static/media/logo.42906c92.svg\";"],"sourceRoot":""}