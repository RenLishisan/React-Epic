{"version":3,"sources":["pages/Register.js"],"names":["Wraper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Component","AuthStore","useStores","history","useHistory","name","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"yfAMA,IAAMA,EAASC,IAAOC,IAAV,KAONC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACXC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEjBE,EAAa,CACfD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KAqFnBI,UAlFG,WAAO,IACdC,EAAaC,cAAbD,UACDE,EAAUC,cA+BhB,OACI,kBAACf,EAAD,KACI,kBAACG,EAAD,uCACJ,kBAAC,IAAD,iBACQE,EADR,CAEIW,KAAK,QACLC,SAnCS,SAAAC,GACbC,QAAQC,IAAI,WAAYF,GACxBN,EAAUS,YAAYH,EAAOI,UAC7BV,EAAUW,YAAYL,EAAOM,UAC7BZ,EAAUa,WACLC,MAAK,WACFP,QAAQC,IAAI,gEACZN,EAAQa,KAAK,QACdC,OAAM,WACLT,QAAQC,IAAI,oEA2BhBS,eAvBe,SAAAC,GACnBX,QAAQC,IAAI,UAAWU,MAwBnB,kBAAC,IAAKC,KAAN,CACIC,MAAM,iBACNhB,KAAK,WACLiB,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,kEAC1B,CAACC,UA3BQ,SAACC,EAAMC,GAC5B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,oFACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,8CACzDD,QAAQG,cA2BP,kBAAC,IAAD,OAGJ,kBAAC,IAAKZ,KAAN,CACIC,MAAM,2BACNhB,KAAK,WACLiB,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,0DAC1B,CAACS,IAAI,EAAET,QAAQ,mCACf,CAACU,IAAI,GAAGV,QAAQ,sCAGpB,kBAAC,IAAMW,SAAP,OAEJ,kBAAC,IAAKf,KAAN,CACIC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,wFAzCtB,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAqB,CACzCX,UADyC,SAC/BC,EAAKC,GACX,OAAGS,EAAc,cAAgBT,EAAaE,QAAQG,UAC/CH,QAAQC,OAAO,+DAwClB,kBAAC,IAAMK,SAAP,OAGJ,kBAAC,IAAKf,KAAStB,EACX,kBAAC,IAAD,CAAQuC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.68f46b92.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Input, Button, Checkbox} from 'antd';\nimport styled from \"styled-components\";\nimport {useStores} from \"../stores\";\nimport { useHistory } from 'react-router-dom'\n\nconst Wraper = styled.div`\n    max-width:600px;\n    margin:30px auto;\n    box-shadow:2px 2px 4px 0 rgba(0,0,0,0.2);\n    border-radius:4px;\n    padding:20px;\n`\nconst Title = styled.h1`\n    text-align:center;\n    margin-bottom:30px\n`\n\nconst layout = {\n    labelCol: {span: 6},\n    wrapperCol: {span: 18},\n};\nconst tailLayout = {\n    wrapperCol: {offset: 6, span: 18},\n};\n\nconst Component = () => {\n    const {AuthStore} = useStores()\n    const history = useHistory()\n\n    const onFinish = values => {\n        console.log('Success:', values);\n        AuthStore.setUsername(values.username)\n        AuthStore.setPassword(values.password)\n        AuthStore.register()\n            .then(()=>{\n                console.log('注册成功，跳转至首页')\n                history.push('/')\n            }).catch(()=>{\n                console.log('登录失败，什么都不做')\n        })\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    const validateUsername = (rule, value) => {\n        if(/\\W/.test(value)) return Promise.reject('ID只能包含字母、数字、下划线');\n        if(value.length < 4 || value.length > 16) return Promise.reject('ID长度为4~16个字符');\n        return Promise.resolve();\n    };\n\n    const validateConfirm = ({getFieldValue}) =>({\n        validator(rule,value){\n            if(getFieldValue('password') === value)return Promise.resolve();\n            return Promise.reject('两次密码校验不一致')\n        }\n    })\n\n    return (\n        <Wraper>\n            <Title>通行证创建</Title>\n        <Form\n            {...layout}\n            name=\"basic\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                label=\"创建ID\"\n                name=\"username\"\n                rules={[\n                    {required: true, message: '请输入您要创建的身份ID'},\n                    {validator:validateUsername}\n                    ]}\n            >\n                <Input/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"创建秘钥\"\n                name=\"password\"\n                rules={[\n                    {required: true, message: '请设置您的私人秘钥'},\n                    {min:4,message:'最少4个字符'},\n                    {max:10,message:'最大10个字符'}\n                    ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n            <Form.Item\n                label=\"确认秘钥\"\n                name=\"confirmPassword\"\n                rules={[{required: true, message: '请再次输入并确认您的私人秘钥'},validateConfirm]}\n            >\n                <Input.Password/>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    提交\n                </Button>\n            </Form.Item>\n        </Form>\n            </Wraper>\n    );\n};\n\nexport default Component;"],"sourceRoot":""}